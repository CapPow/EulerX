#! /usr/bin/env python
# __author__ = "Parisa Kianmajd"
#__version__ = "2.0.0"
# input: a MIR csv file
# output: a csv file with three columns <Name, Author, Rank> plus a tex file showing the results in customized tables

# Copyright (c) 2014 University of California, Davis
# 
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import csv
import argparse
import sys

def main(inFile, rankFile):
    art2symbol = {'equals':'==',
                      'is_included_in':'<',
                      'includes':'>',
                      'overlaps':'><',
                  'disjoint':'!'}
    latexSym = {'>' : '\\textless',
                 '<': '\\textgreater',
                 '<>': '$\\neq$',
                 '><': '\\textgreater\\textless'}
                 
    elements = dict()
    table = dict()
    ranks = ['Species', 'Genus', 'Subfamily', 'Family', 'Superfamily', 'Order', 'Suborder','Infraorder', 'Parvorder','?']
    for r in ranks:
        table.update({r:{'Totals':0}})
        
    rankData = csv.reader(open(rankFile,'rU'))
    next(rankData, None) #skip header row
    rankDict = dict()
    for d in rankData:
        if "(" in d[1]:
            y =d[1].split("(")[1].split(")")[0]
        else:
            y = d[1]
        rankDict.update({y + "." + d[0].replace(" ", "_") : d[2]})
    inputData = csv.reader(open(inFile))
    for line in inputData:
        #second half of the table
        if line[1] in art2symbol:
            col = art2symbol[line[1]] + " / "
        else:
            col = line[1] + " / "
        name1 = line[0].split(".")[1]
        name2 = line[2].split(".")[1]
        if name1 == name2:
            col += "="
        else:
            col += "<>"
        if "_" in line[0]:
            rank1 = 'Species'
        else:
            rank1 = rankDict[line[0]]
        if "_" in line[2]:
            rank2 = 'Species'
        else:       
            rank2 = rankDict[line[2]]
        if rank1 == rank2:
            row = rank1
            if col not in table[row]:
                table[row].update({col:0})
            table[row][col] += 1
            #first half of the table
            g1 = line[0].split(".")[0]
            g2 = line[2].split(".")[0]
            for g in [g1,g2]:
                if g not in elements:
                    elements.update({g:dict()})
            if rank1 not in elements[g1]:
                elements[g1].update({rank1:set()})
            if rank2 not in elements[g2]:
                elements[g2].update({rank2:set()})
            elements[g1][rank1].add(line[0].split(".")[1])
            elements[g2][rank2].add(line[2].split(".")[1])
    # Totals column
    for g in elements:
        for e in elements[g]:
            table[e][g] = len(elements[g][e])
    values =  ['== / =', '== / <>', '> / =', '< / =' , '>< / =']
    for k in table:
        total = 0
        for v in table[k]:
            if v in values:
                total += table[k][v]
            table[k]["Totals"] = total
    table.update({'Totals':dict()})
    values.insert(0,g1)
    values.insert(1,g2)
    for v in values:
        t = 0
        for r in ranks:
            if v in table[r]:
                t += table[r][v]
        table['Totals'][v] = t
    tTotals = 0
    values.remove(g1)
    values.remove(g2)
    for v in values:
        tTotals += table['Totals'][v]
    table['Totals']['Totals'] = tTotals
    row = ['']
    for d in table:
        for k in table[d]:
            if k not in row:
                row.append(k)
    row_format ="{:>11}"* (len(row)+1)
    print(row_format.format("", *row))
    for r in table:
        line = [r]
        l = r + '&'
        for i in row:
            if i in table[r]:
                line.append(table[r][i])
                l += str(table[r][i]) + "&"
            elif i != '':
                line.append("0")
                l += "0" + "&"
        l = l[:-1] + '\\\\\n'
        print(row_format.format("",*line))
    # Table 5
    table_ranks = ['Species', 'Genus', 'Subfamily', 'Family','Order','Totals']
    oFile = open('t.tex','w')
    oFile.write('\\documentclass{report}\n\\usepackage{titlesec}\n\\usepackage[english]{babel}\n\\usepackage{array}\n\\setlength\\extrarowheight{3.5pt} \n\\begin{document}')
    oFile.write('\\begin{tabular}{l|cc|ccccc|c }\n')
    oFile.write('\\hline\n')
    row = ['Rank', g1, g2, '== / =', '== / <>', '> / =', '< / =' , '>< / =', 'Totals']
    r = " & ".join(row)
    for key in latexSym:
        r = r.replace(key,latexSym[key]) 
    oFile.write(r + "\\\\\n")
    oFile.write('\\hline\n')
    for i in xrange(len(table_ranks)):
        if table_ranks[i] == 'Totals':
            oFile.write('\\hline\n')

        w = table_ranks[i] + '&'
        for j in xrange(1,len(row)):
            if row[j] in table[table_ranks[i]]:
                w += str(table[table_ranks[i]][row[j]]) + '&'
            else:
                w += ' 0 &'                
        oFile.write(w[:-1])
        oFile.write('\\\\\n')
    oFile.write('\\hline\n')
    oFile.write('\\end{tabular}')
    # table 1
    oFile.write('\\\\ ' * 4)
    table1_ranks = ['Order','Suborder','Infraorder','Parvorder','Superfamily','Family','Subfamily','Genus','Species']
    oFile.write('\\begin{tabular}{lccc}\n')
    oFile.write('\\hline\n')
    oFile.write('Taxonomic Rank & ' + g1 +  "&" +  g2 + '& Differential\\\\\n')
    oFile.write('\\hline\n')
    stat = dict()
    for d in rankDict:
        g = d.split(".")[0]
        if g not in stat:
            stat.update({g : {'Total':0}})
        if rankDict[d] not in stat[g]:
            stat[g].update({rankDict[d]:0})
        stat[g][rankDict[d]] +=1
        stat[g]['Total'] += 1
    totalW = 0
    for r in table1_ranks:
        if r in stat[g1]:
            v1 = stat[g1][r]
        else:
            v1 = 0
        if r in stat[g2]:           
            v2 = stat[g2][r]
        else:
            v2 = 0   
        diff = v1 - v2
        totalW += diff
        if v1 == 0:
            v1 = "-"
	if v2 == 0:
            v2 = "-"       
        w = r + "&" + str(v1) + "&" + str(v2) + "&"
        if diff != 0:
            if diff > 0:
            	w = w + "+" +  str(diff)
            else:
            	w += str(diff)
        else:
            w += "-"
        oFile.write(w + '\\\\\n')
    oFile.write('\\hline\n')
    str_totalW = str(totalW)
    if totalW > 0:
    	str_totalW = "+" + str_totalW
    oFile.write('Total &' + str(stat[g1]['Total']) + "&" + str(stat[g2]['Total']) + "&" + str_totalW +  '\\\\\n')
    oFile.write('\\hline\n')
    oFile.write('\\end{tabular}')   
    oFile.write('\\end{document}')

      
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-i","--iFile")
    parser.add_argument("-r","--rFile")
    args = parser.parse_args()
    main(args.iFile, args.rFile)
