#! /usr/bin/env python
# __author__ = "Parisa Kianmajd"
#__version__ = "2.0.0"
# input: a 3 column csv file <Name, Year, Rank> generated by addRank and a csv file generated by mirStats
# output: A tex file showing the results in customized tables
# Copyright (c) 2014 University of California, Davis
# 
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import csv
import argparse
import sys

def main(inFile, rankFile):
    latexSym = {'>' : '\\textless',
                 '<': '\\textgreater',
                 '<>': '$\\neq$',
                 '><': '\\textgreater\\textless'}                
    ranks = ['Species', 'Genus', 'Subfamily', 'Family', 'Superfamily', 'Order', 'Suborder','Infraorder', 'Parvorder','?']       
    rankData = csv.reader(open(rankFile,'rU'))
    next(rankData, None) #skip header row
    rankDict = dict()
    groups = set()
    for d in rankData:
        if "(" in d[1]:
            y =d[1].split("(")[1].split(")")[0]
        else:
            y = d[1]
        groups.add(y)
        rankDict.update({y + "." + d[0].replace(" ", "_") : d[2]})
    group = list(groups)
    rtable = csv.DictReader(open(inFile))
    table = dict()
    for d in rtable:
        key = d['Rank']
        table.update({key: d})
    # Table 5
    table_ranks = ['Species', 'Genus', 'Subfamily', 'Family','Order']
    oFile = sys.stdout
    oFile.write('\\documentclass{report}\n\\usepackage{titlesec}\n\\usepackage[english]{babel}\n\\usepackage{array}\n\\setlength\\extrarowheight{3.5pt} \n\\begin{document}')
    oFile.write('\\begin{tabular}{l|cc|ccccc|c }\n')
    oFile.write('\\hline\n')
    row = ['Rank', '2005', '1993', '== / =', '== / <>', '> / =', '< / =' , '>< / =', 'Totals']
    r = " & ".join(row)
    for key in latexSym:
        r = r.replace(key,latexSym[key]) 
    oFile.write(r + "\\\\\n")
    oFile.write('\\hline\n')
    for i in xrange(len(table_ranks)):
        if table_ranks[i] == 'Totals':
            oFile.write('\\hline\n')

        w = table_ranks[i] + '&'
        for j in xrange(1,len(row)):
            if row[j] in table[table_ranks[i]]:
                w += str(table[table_ranks[i]][row[j]]) + '&'
            else:
                w += ' 0 &'                
        oFile.write(w[:-1])
        oFile.write('\\\\\n')
    oFile.write('\\hline\n')
    oFile.write('\\end{tabular}')
    # table 1
    oFile.write('\\\\ ' * 4)
    table1_ranks = ['Order','Suborder','Infraorder','Parvorder','Superfamily','Family','Subfamily','Genus','Species']
    oFile.write('\\begin{tabular}{lccc}\n')
    oFile.write('\\hline\n')
    oFile.write('Taxonomic Rank & ' + group[0] +  "&" +  group[1] + '& Differential\\\\\n')
    oFile.write('\\hline\n')
    stat = dict()
    for d in rankDict:
        g = d.split(".")[0]
        if g not in stat:
            stat.update({g : {'Total':0}})
        if rankDict[d] not in stat[g]:
            stat[g].update({rankDict[d]:0})
        stat[g][rankDict[d]] +=1
        stat[g]['Total'] += 1
    totalW = 0
    for r in table1_ranks:
        if r in stat[group[1]]:
            v1 = stat[group[1]][r]
        else:
            v1 = 0
        if r in stat[group[0]]:           
            v2 = stat[group[0]][r]
        else:
            v2 = 0   
        diff = v1 - v2
        totalW += diff
        if v1 == 0:
            v1 = "-"
	if v2 == 0:
            v2 = "-"       
        w = r + "&" + str(v1) + "&" + str(v2) + "&"
        if diff != 0:
            if diff > 0:
            	w = w + "+" +  str(diff)
            else:
            	w += str(diff)
        else:
            w += "-"
        oFile.write(w + '\\\\\n')
    oFile.write('\\hline\n')
    str_totalW = str(totalW)
    if totalW > 0:
    	str_totalW = "+" + str_totalW
    oFile.write('Total &' + str(stat[group[0]]['Total']) + "&" + str(stat[group[1]]['Total']) + "&" + str_totalW +  '\\\\\n')
    oFile.write('\\hline\n')
    oFile.write('\\end{tabular}')   
    oFile.write('\\end{document}')

      
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-i","--iFile")
    parser.add_argument("-r","--rFile")
    args = parser.parse_args()
    main(args.iFile, args.rFile)
